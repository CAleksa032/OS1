GAS LISTING /tmp/ccZubRnv.s 			page 1


   1              		.file	"memoryDesc.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z6insertP10MemoryDescS0_
   9              	_Z6insertP10MemoryDescS0_:
  10              	.LFB3:
  11              		.file 1 "src/memoryDesc.cpp"
   1:src/memoryDesc.cpp **** //
   2:src/memoryDesc.cpp **** // Created by os on 9/14/22.
   3:src/memoryDesc.cpp **** //
   4:src/memoryDesc.cpp **** 
   5:src/memoryDesc.cpp **** #include "../h/memoryDesc.hpp"
   6:src/memoryDesc.cpp **** 
   7:src/memoryDesc.cpp **** 
   8:src/memoryDesc.cpp **** MemoryDesc* insert(MemoryDesc *head, MemoryDesc *elem) {
  12              		.loc 1 8 56
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
   9:src/memoryDesc.cpp ****     //ako je elem null izlazi
  10:src/memoryDesc.cpp ****     if (!elem)return nullptr;
  21              		.loc 1 10 5
  22 000c 638C0504 		beqz	a1,.L6
  11:src/memoryDesc.cpp **** 
  12:src/memoryDesc.cpp ****     //ako nema head-a
  13:src/memoryDesc.cpp ****     if (!(head)) {
  23              		.loc 1 13 5
  24 0010 63040502 		beqz	a0,.L9
  14:src/memoryDesc.cpp ****         elem->next = nullptr;
  15:src/memoryDesc.cpp ****         head = elem;
  16:src/memoryDesc.cpp **** 
  17:src/memoryDesc.cpp ****         return head;
  18:src/memoryDesc.cpp ****     }
  19:src/memoryDesc.cpp **** 
  20:src/memoryDesc.cpp ****     //ako elem dolazi na prvo mesto
  21:src/memoryDesc.cpp ****     if (elem < head) {
  25              		.loc 1 21 5
  26 0014 63E8A502 		bltu	a1,a0,.L10
  22:src/memoryDesc.cpp ****         elem->next = head;
  23:src/memoryDesc.cpp ****         head = elem;
  24:src/memoryDesc.cpp ****         return head;
  25:src/memoryDesc.cpp ****     }
  26:src/memoryDesc.cpp **** 
  27:src/memoryDesc.cpp ****     //ako elem dolazi na mesto u sredini
  28:src/memoryDesc.cpp ****     MemoryDesc *tmp = head;
  27              		.loc 1 28 17 is_stmt 0
  28 0018 93070500 		mv	a5,a0
  29              	.L4:
  30              	.LVL1:
GAS LISTING /tmp/ccZubRnv.s 			page 2


  29:src/memoryDesc.cpp ****     while (tmp->next) {
  31              		.loc 1 29 5 is_stmt 1
  32              		.loc 1 29 17
  33 001c 13870700 		mv	a4,a5
  34 0020 83B78700 		ld	a5,8(a5)
  35              	.LVL2:
  36 0024 638A0702 		beqz	a5,.L5
  30:src/memoryDesc.cpp ****         if (tmp->next > elem) {
  37              		.loc 1 30 9
  38 0028 E3FAF5FE 		bleu	a5,a1,.L4
  31:src/memoryDesc.cpp ****             elem->next = tmp->next;
  39              		.loc 1 31 13
  40              		.loc 1 31 24 is_stmt 0
  41 002c 23B4F500 		sd	a5,8(a1)
  32:src/memoryDesc.cpp ****             tmp->next = elem;
  42              		.loc 1 32 13 is_stmt 1
  43              		.loc 1 32 23 is_stmt 0
  44 0030 2334B700 		sd	a1,8(a4)
  33:src/memoryDesc.cpp ****             return head;
  45              		.loc 1 33 13 is_stmt 1
  46              		.loc 1 33 20 is_stmt 0
  47 0034 6F008001 		j	.L1
  48              	.LVL3:
  49              	.L9:
  14:src/memoryDesc.cpp ****         head = elem;
  50              		.loc 1 14 9 is_stmt 1
  14:src/memoryDesc.cpp ****         head = elem;
  51              		.loc 1 14 20 is_stmt 0
  52 0038 23B40500 		sd	zero,8(a1)
  15:src/memoryDesc.cpp **** 
  53              		.loc 1 15 9 is_stmt 1
  54              	.LVL4:
  17:src/memoryDesc.cpp ****     }
  55              		.loc 1 17 9
  17:src/memoryDesc.cpp ****     }
  56              		.loc 1 17 16 is_stmt 0
  57 003c 13850500 		mv	a0,a1
  58 0040 6F00C000 		j	.L1
  59              	.LVL5:
  60              	.L10:
  22:src/memoryDesc.cpp ****         head = elem;
  61              		.loc 1 22 9 is_stmt 1
  22:src/memoryDesc.cpp ****         head = elem;
  62              		.loc 1 22 20 is_stmt 0
  63 0044 23B4A500 		sd	a0,8(a1)
  23:src/memoryDesc.cpp ****         return head;
  64              		.loc 1 23 9 is_stmt 1
  65              	.LVL6:
  24:src/memoryDesc.cpp ****     }
  66              		.loc 1 24 9
  24:src/memoryDesc.cpp ****     }
  67              		.loc 1 24 16 is_stmt 0
  68 0048 13850500 		mv	a0,a1
  69              	.LVL7:
  70              	.L1:
  34:src/memoryDesc.cpp ****         }
  35:src/memoryDesc.cpp ****         tmp = tmp->next;
GAS LISTING /tmp/ccZubRnv.s 			page 3


  36:src/memoryDesc.cpp ****     }
  37:src/memoryDesc.cpp **** 
  38:src/memoryDesc.cpp ****     //ako elem ide na kraj
  39:src/memoryDesc.cpp ****     tmp->next = elem;
  40:src/memoryDesc.cpp ****     elem->next = nullptr;
  41:src/memoryDesc.cpp **** 
  42:src/memoryDesc.cpp ****     return head;
  43:src/memoryDesc.cpp **** 
  44:src/memoryDesc.cpp **** }
  71              		.loc 1 44 1
  72 004c 03348100 		ld	s0,8(sp)
  73              		.cfi_remember_state
  74              		.cfi_restore 8
  75              		.cfi_def_cfa 2, 16
  76 0050 13010101 		addi	sp,sp,16
  77              		.cfi_def_cfa_offset 0
  78 0054 67800000 		jr	ra
  79              	.LVL8:
  80              	.L5:
  81              		.cfi_restore_state
  39:src/memoryDesc.cpp ****     elem->next = nullptr;
  82              		.loc 1 39 5 is_stmt 1
  39:src/memoryDesc.cpp ****     elem->next = nullptr;
  83              		.loc 1 39 15 is_stmt 0
  84 0058 2334B700 		sd	a1,8(a4)
  40:src/memoryDesc.cpp **** 
  85              		.loc 1 40 5 is_stmt 1
  40:src/memoryDesc.cpp **** 
  86              		.loc 1 40 16 is_stmt 0
  87 005c 23B40500 		sd	zero,8(a1)
  42:src/memoryDesc.cpp **** 
  88              		.loc 1 42 5 is_stmt 1
  42:src/memoryDesc.cpp **** 
  89              		.loc 1 42 12 is_stmt 0
  90 0060 6FF0DFFE 		j	.L1
  91              	.LVL9:
  92              	.L6:
  10:src/memoryDesc.cpp **** 
  93              		.loc 1 10 22
  94 0064 13850500 		mv	a0,a1
  95              	.LVL10:
  96 0068 6FF05FFE 		j	.L1
  97              		.cfi_endproc
  98              	.LFE3:
 100              		.align	2
 101              		.globl	_Z6removeP10MemoryDescS0_
 103              	_Z6removeP10MemoryDescS0_:
 104              	.LFB4:
  45:src/memoryDesc.cpp **** 
  46:src/memoryDesc.cpp **** MemoryDesc* remove(MemoryDesc *head, MemoryDesc *elem) {
 105              		.loc 1 46 56 is_stmt 1
 106              		.cfi_startproc
 107              	.LVL11:
 108 006c 130101FF 		addi	sp,sp,-16
 109              		.cfi_def_cfa_offset 16
 110 0070 23348100 		sd	s0,8(sp)
 111              		.cfi_offset 8, -8
GAS LISTING /tmp/ccZubRnv.s 			page 4


 112 0074 13040101 		addi	s0,sp,16
 113              		.cfi_def_cfa 8, 0
  47:src/memoryDesc.cpp ****     // ako lista ili elem vrate null
  48:src/memoryDesc.cpp ****     if ((!(head)) || !elem) return nullptr;
 114              		.loc 1 48 5
 115 0078 63060502 		beqz	a0,.L12
 116              		.loc 1 48 19 is_stmt 0 discriminator 2
 117 007c 63800504 		beqz	a1,.L14
  49:src/memoryDesc.cpp **** 
  50:src/memoryDesc.cpp **** 
  51:src/memoryDesc.cpp ****     // ako je elem na pocetku liste
  52:src/memoryDesc.cpp ****     if (head == elem) {
 118              		.loc 1 52 5 is_stmt 1
 119 0080 6308B502 		beq	a0,a1,.L17
  53:src/memoryDesc.cpp ****         head = (head)->next;
  54:src/memoryDesc.cpp ****         elem->next = nullptr;
  55:src/memoryDesc.cpp ****         return head;
  56:src/memoryDesc.cpp ****     }
  57:src/memoryDesc.cpp **** 
  58:src/memoryDesc.cpp ****     // ako je na bilo kom drugom mestu
  59:src/memoryDesc.cpp ****     MemoryDesc *tmp = head;
 120              		.loc 1 59 17 is_stmt 0
 121 0084 93070500 		mv	a5,a0
 122              	.L13:
 123              	.LVL12:
  60:src/memoryDesc.cpp ****     while (tmp->next) {
 124              		.loc 1 60 5 is_stmt 1
 125              		.loc 1 60 17
 126 0088 13870700 		mv	a4,a5
 127 008c 83B78700 		ld	a5,8(a5)
 128              	.LVL13:
 129 0090 638A0700 		beqz	a5,.L12
  61:src/memoryDesc.cpp ****         if (tmp->next == elem) {
 130              		.loc 1 61 9
 131 0094 E39AB7FE 		bne	a5,a1,.L13
  62:src/memoryDesc.cpp ****             tmp->next = elem->next;
 132              		.loc 1 62 13
 133              		.loc 1 62 31 is_stmt 0
 134 0098 83B78500 		ld	a5,8(a1)
 135              		.loc 1 62 23
 136 009c 2334F700 		sd	a5,8(a4)
  63:src/memoryDesc.cpp ****             elem->next = nullptr;
 137              		.loc 1 63 13 is_stmt 1
 138              		.loc 1 63 24 is_stmt 0
 139 00a0 23B40500 		sd	zero,8(a1)
  64:src/memoryDesc.cpp ****             return head;
 140              		.loc 1 64 13 is_stmt 1
 141              	.LVL14:
 142              	.L12:
  65:src/memoryDesc.cpp ****         }
  66:src/memoryDesc.cpp ****         tmp = tmp->next;
  67:src/memoryDesc.cpp ****     }
  68:src/memoryDesc.cpp ****     return head;
  69:src/memoryDesc.cpp **** }
 143              		.loc 1 69 1 is_stmt 0
 144 00a4 03348100 		ld	s0,8(sp)
 145              		.cfi_remember_state
GAS LISTING /tmp/ccZubRnv.s 			page 5


 146              		.cfi_restore 8
 147              		.cfi_def_cfa 2, 16
 148 00a8 13010101 		addi	sp,sp,16
 149              		.cfi_def_cfa_offset 0
 150 00ac 67800000 		jr	ra
 151              	.LVL15:
 152              	.L17:
 153              		.cfi_restore_state
  53:src/memoryDesc.cpp ****         elem->next = nullptr;
 154              		.loc 1 53 9 is_stmt 1
  53:src/memoryDesc.cpp ****         elem->next = nullptr;
 155              		.loc 1 53 14 is_stmt 0
 156 00b0 03358500 		ld	a0,8(a0)
 157              	.LVL16:
  54:src/memoryDesc.cpp ****         return head;
 158              		.loc 1 54 9 is_stmt 1
  54:src/memoryDesc.cpp ****         return head;
 159              		.loc 1 54 20 is_stmt 0
 160 00b4 23B40500 		sd	zero,8(a1)
  55:src/memoryDesc.cpp ****     }
 161              		.loc 1 55 9 is_stmt 1
  55:src/memoryDesc.cpp ****     }
 162              		.loc 1 55 16 is_stmt 0
 163 00b8 6FF0DFFE 		j	.L12
 164              	.L14:
  48:src/memoryDesc.cpp **** 
 165              		.loc 1 48 36
 166 00bc 13850500 		mv	a0,a1
 167              	.LVL17:
 168 00c0 6FF05FFE 		j	.L12
 169              		.cfi_endproc
 170              	.LFE4:
 172              		.align	2
 173              		.globl	_Z7connectP10MemoryDescS0_
 175              	_Z7connectP10MemoryDescS0_:
 176              	.LFB5:
  70:src/memoryDesc.cpp **** 
  71:src/memoryDesc.cpp **** MemoryDesc* connect(MemoryDesc *head, MemoryDesc *elem) {
 177              		.loc 1 71 57 is_stmt 1
 178              		.cfi_startproc
 179              	.LVL18:
 180 00c4 130101FF 		addi	sp,sp,-16
 181              		.cfi_def_cfa_offset 16
 182 00c8 23348100 		sd	s0,8(sp)
 183              		.cfi_offset 8, -8
 184 00cc 13040101 		addi	s0,sp,16
 185              		.cfi_def_cfa 8, 0
  72:src/memoryDesc.cpp ****     //provera regularnosti head, elem
  73:src/memoryDesc.cpp ****     if ((!(head)) || !elem) return nullptr;
 186              		.loc 1 73 5
 187 00d0 630C0508 		beqz	a0,.L19
 188              		.loc 1 73 19 is_stmt 0 discriminator 2
 189 00d4 63880508 		beqz	a1,.L25
  74:src/memoryDesc.cpp **** 
  75:src/memoryDesc.cpp ****     //u slucaju da je element head
  76:src/memoryDesc.cpp ****     if(elem == head){
 190              		.loc 1 76 5 is_stmt 1
GAS LISTING /tmp/ccZubRnv.s 			page 6


 191 00d8 630EB500 		beq	a0,a1,.L28
  77:src/memoryDesc.cpp ****         if((head)->next && (((char*)(head) + (head)->size + MEM_BLOCK_SIZE) >= (char*)((head)->next
  78:src/memoryDesc.cpp ****             (head)->size = (head)->size + (head)->next->size + MEM_BLOCK_SIZE;
  79:src/memoryDesc.cpp ****             (head)->next = (head)->next->next;
  80:src/memoryDesc.cpp ****         // nsiam siguran koja od ove dve linije treba da bude prva
  81:src/memoryDesc.cpp ****         }
  82:src/memoryDesc.cpp ****         return head;
  83:src/memoryDesc.cpp ****     }
  84:src/memoryDesc.cpp **** 
  85:src/memoryDesc.cpp ****     //dovodjenje pokazivaca na element pre elem ako postoji
  86:src/memoryDesc.cpp ****     MemoryDesc* tmp = head;
 192              		.loc 1 86 17 is_stmt 0
 193 00dc 13070500 		mv	a4,a0
 194              	.L20:
 195              	.LVL19:
  87:src/memoryDesc.cpp ****     while (tmp->next) {
 196              		.loc 1 87 5 is_stmt 1
 197              		.loc 1 87 17
 198 00e0 93070700 		mv	a5,a4
 199 00e4 03378700 		ld	a4,8(a4)
 200              	.LVL20:
 201 00e8 630E0704 		beqz	a4,.L23
  88:src/memoryDesc.cpp ****         if (tmp->next == elem) {
 202              		.loc 1 88 9
 203 00ec E31AB7FE 		bne	a4,a1,.L20
 204 00f0 6F004005 		j	.L23
 205              	.LVL21:
 206              	.L28:
  77:src/memoryDesc.cpp ****         if((head)->next && (((char*)(head) + (head)->size + MEM_BLOCK_SIZE) >= (char*)((head)->next
 207              		.loc 1 77 9
  77:src/memoryDesc.cpp ****         if((head)->next && (((char*)(head) + (head)->size + MEM_BLOCK_SIZE) >= (char*)((head)->next
 208              		.loc 1 77 20 is_stmt 0
 209 00f4 83378500 		ld	a5,8(a0)
  77:src/memoryDesc.cpp ****         if((head)->next && (((char*)(head) + (head)->size + MEM_BLOCK_SIZE) >= (char*)((head)->next
 210              		.loc 1 77 9
 211 00f8 63880706 		beqz	a5,.L19
  77:src/memoryDesc.cpp ****         if((head)->next && (((char*)(head) + (head)->size + MEM_BLOCK_SIZE) >= (char*)((head)->next
 212              		.loc 1 77 54 discriminator 1
 213 00fc 03370500 		ld	a4,0(a0)
  77:src/memoryDesc.cpp ****         if((head)->next && (((char*)(head) + (head)->size + MEM_BLOCK_SIZE) >= (char*)((head)->next
 214              		.loc 1 77 59 discriminator 1
 215 0100 93060704 		addi	a3,a4,64
 216 0104 B306D500 		add	a3,a0,a3
  77:src/memoryDesc.cpp ****         if((head)->next && (((char*)(head) + (head)->size + MEM_BLOCK_SIZE) >= (char*)((head)->next
 217              		.loc 1 77 25 discriminator 1
 218 0108 63E0F606 		bgtu	a5,a3,.L19
  78:src/memoryDesc.cpp ****             (head)->next = (head)->next->next;
 219              		.loc 1 78 13 is_stmt 1
  78:src/memoryDesc.cpp ****             (head)->next = (head)->next->next;
 220              		.loc 1 78 57 is_stmt 0
 221 010c 83B60700 		ld	a3,0(a5)
  78:src/memoryDesc.cpp ****             (head)->next = (head)->next->next;
 222              		.loc 1 78 41
 223 0110 3307D700 		add	a4,a4,a3
  78:src/memoryDesc.cpp ****             (head)->next = (head)->next->next;
 224              		.loc 1 78 62
 225 0114 13070704 		addi	a4,a4,64
GAS LISTING /tmp/ccZubRnv.s 			page 7


  78:src/memoryDesc.cpp ****             (head)->next = (head)->next->next;
 226              		.loc 1 78 26
 227 0118 2330E500 		sd	a4,0(a0)
  79:src/memoryDesc.cpp ****         // nsiam siguran koja od ove dve linije treba da bude prva
 228              		.loc 1 79 13 is_stmt 1
  79:src/memoryDesc.cpp ****         // nsiam siguran koja od ove dve linije treba da bude prva
 229              		.loc 1 79 42 is_stmt 0
 230 011c 83B78700 		ld	a5,8(a5)
  79:src/memoryDesc.cpp ****         // nsiam siguran koja od ove dve linije treba da bude prva
 231              		.loc 1 79 26
 232 0120 2334F500 		sd	a5,8(a0)
  82:src/memoryDesc.cpp ****     }
 233              		.loc 1 82 9 is_stmt 1
  82:src/memoryDesc.cpp ****     }
 234              		.loc 1 82 16 is_stmt 0
 235 0124 6F004004 		j	.L19
 236              	.LVL22:
 237              	.L29:
  89:src/memoryDesc.cpp ****             break;
  90:src/memoryDesc.cpp ****         }
  91:src/memoryDesc.cpp ****         tmp = tmp->next;
  92:src/memoryDesc.cpp ****     }
  93:src/memoryDesc.cpp **** 
  94:src/memoryDesc.cpp ****     //pokazivac na mestu pre pokusava da se spoji sa elem, a zatim elem sa narednim ako postoji
  95:src/memoryDesc.cpp ****     while(tmp->next){
  96:src/memoryDesc.cpp ****         if (tmp->next && (((char *) tmp + tmp->size + MEM_BLOCK_SIZE) >= (char *) (tmp->next))) {
  97:src/memoryDesc.cpp ****             tmp->size = tmp->size + tmp->next->size + MEM_BLOCK_SIZE;
 238              		.loc 1 97 13 is_stmt 1 discriminator 2
 239              		.loc 1 97 48 is_stmt 0 discriminator 2
 240 0128 83B60700 		ld	a3,0(a5)
 241              		.loc 1 97 35 discriminator 2
 242 012c 3306D600 		add	a2,a2,a3
 243              		.loc 1 97 53 discriminator 2
 244 0130 13060604 		addi	a2,a2,64
 245              		.loc 1 97 23 discriminator 2
 246 0134 2330C700 		sd	a2,0(a4)
  98:src/memoryDesc.cpp ****             tmp->next = tmp->next->next;
 247              		.loc 1 98 13 is_stmt 1 discriminator 2
 248              		.loc 1 98 36 is_stmt 0 discriminator 2
 249 0138 83B78700 		ld	a5,8(a5)
 250              		.loc 1 98 23 discriminator 2
 251 013c 2334F700 		sd	a5,8(a4)
  99:src/memoryDesc.cpp ****             continue;
 252              		.loc 1 99 13 is_stmt 1 discriminator 2
 253 0140 93070700 		mv	a5,a4
 254              	.LVL23:
 255              	.L23:
  95:src/memoryDesc.cpp ****         if (tmp->next && (((char *) tmp + tmp->size + MEM_BLOCK_SIZE) >= (char *) (tmp->next))) {
 256              		.loc 1 95 5
  95:src/memoryDesc.cpp ****         if (tmp->next && (((char *) tmp + tmp->size + MEM_BLOCK_SIZE) >= (char *) (tmp->next))) {
 257              		.loc 1 95 16
 258 0144 13870700 		mv	a4,a5
 259 0148 83B78700 		ld	a5,8(a5)
 260              	.LVL24:
 261 014c 638E0700 		beqz	a5,.L19
  96:src/memoryDesc.cpp ****             tmp->size = tmp->size + tmp->next->size + MEM_BLOCK_SIZE;
 262              		.loc 1 96 9 discriminator 1
GAS LISTING /tmp/ccZubRnv.s 			page 8


  96:src/memoryDesc.cpp ****             tmp->size = tmp->size + tmp->next->size + MEM_BLOCK_SIZE;
 263              		.loc 1 96 48 is_stmt 0 discriminator 1
 264 0150 03360700 		ld	a2,0(a4)
  96:src/memoryDesc.cpp ****             tmp->size = tmp->size + tmp->next->size + MEM_BLOCK_SIZE;
 265              		.loc 1 96 53 discriminator 1
 266 0154 93060604 		addi	a3,a2,64
 267 0158 B306D700 		add	a3,a4,a3
  96:src/memoryDesc.cpp ****             tmp->size = tmp->size + tmp->next->size + MEM_BLOCK_SIZE;
 268              		.loc 1 96 23 discriminator 1
 269 015c E3E4F6FE 		bgtu	a5,a3,.L23
 270 0160 6FF09FFC 		j	.L29
 271              	.LVL25:
 272              	.L25:
  73:src/memoryDesc.cpp **** 
 273              		.loc 1 73 36
 274 0164 13850500 		mv	a0,a1
 275              	.LVL26:
 276              	.L19:
 100:src/memoryDesc.cpp ****         }
 101:src/memoryDesc.cpp ****         tmp = tmp->next;
 102:src/memoryDesc.cpp ****         if(!tmp) break;
 103:src/memoryDesc.cpp ****     }
 104:src/memoryDesc.cpp ****     return head;
 105:src/memoryDesc.cpp **** }
 277              		.loc 1 105 1
 278 0168 03348100 		ld	s0,8(sp)
 279              		.cfi_restore 8
 280              		.cfi_def_cfa 2, 16
 281 016c 13010101 		addi	sp,sp,16
 282              		.cfi_def_cfa_offset 0
 283 0170 67800000 		jr	ra
 284              		.cfi_endproc
 285              	.LFE5:
 287              	.Letext0:
 288              		.file 2 "src/../h/../lib/hw.h"
 289              		.file 3 "src/../h/memoryDesc.hpp"
GAS LISTING /tmp/ccZubRnv.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 memoryDesc.cpp
     /tmp/ccZubRnv.s:9      .text:0000000000000000 _Z6insertP10MemoryDescS0_
     /tmp/ccZubRnv.s:13     .text:0000000000000000 .L0 
     /tmp/ccZubRnv.s:15     .text:0000000000000000 .L0 
     /tmp/ccZubRnv.s:16     .text:0000000000000004 .L0 
     /tmp/ccZubRnv.s:18     .text:0000000000000008 .L0 
     /tmp/ccZubRnv.s:20     .text:000000000000000c .L0 
     /tmp/ccZubRnv.s:22     .text:000000000000000c .L0 
     /tmp/ccZubRnv.s:24     .text:0000000000000010 .L0 
     /tmp/ccZubRnv.s:26     .text:0000000000000014 .L0 
     /tmp/ccZubRnv.s:28     .text:0000000000000018 .L0 
     /tmp/ccZubRnv.s:32     .text:000000000000001c .L0 
     /tmp/ccZubRnv.s:33     .text:000000000000001c .L0 
     /tmp/ccZubRnv.s:38     .text:0000000000000028 .L0 
     /tmp/ccZubRnv.s:40     .text:000000000000002c .L0 
     /tmp/ccZubRnv.s:41     .text:000000000000002c .L0 
     /tmp/ccZubRnv.s:43     .text:0000000000000030 .L0 
     /tmp/ccZubRnv.s:44     .text:0000000000000030 .L0 
     /tmp/ccZubRnv.s:46     .text:0000000000000034 .L0 
     /tmp/ccZubRnv.s:47     .text:0000000000000034 .L0 
     /tmp/ccZubRnv.s:51     .text:0000000000000038 .L0 
     /tmp/ccZubRnv.s:52     .text:0000000000000038 .L0 
     /tmp/ccZubRnv.s:55     .text:000000000000003c .L0 
     /tmp/ccZubRnv.s:56     .text:000000000000003c .L0 
     /tmp/ccZubRnv.s:57     .text:000000000000003c .L0 
     /tmp/ccZubRnv.s:62     .text:0000000000000044 .L0 
     /tmp/ccZubRnv.s:63     .text:0000000000000044 .L0 
     /tmp/ccZubRnv.s:66     .text:0000000000000048 .L0 
     /tmp/ccZubRnv.s:67     .text:0000000000000048 .L0 
     /tmp/ccZubRnv.s:68     .text:0000000000000048 .L0 
     /tmp/ccZubRnv.s:72     .text:000000000000004c .L0 
     /tmp/ccZubRnv.s:73     .text:0000000000000050 .L0 
     /tmp/ccZubRnv.s:74     .text:0000000000000050 .L0 
     /tmp/ccZubRnv.s:75     .text:0000000000000050 .L0 
     /tmp/ccZubRnv.s:77     .text:0000000000000054 .L0 
     /tmp/ccZubRnv.s:81     .text:0000000000000058 .L0 
     /tmp/ccZubRnv.s:83     .text:0000000000000058 .L0 
     /tmp/ccZubRnv.s:84     .text:0000000000000058 .L0 
     /tmp/ccZubRnv.s:86     .text:000000000000005c .L0 
     /tmp/ccZubRnv.s:87     .text:000000000000005c .L0 
     /tmp/ccZubRnv.s:89     .text:0000000000000060 .L0 
     /tmp/ccZubRnv.s:90     .text:0000000000000060 .L0 
     /tmp/ccZubRnv.s:94     .text:0000000000000064 .L0 
     /tmp/ccZubRnv.s:97     .text:000000000000006c .L0 
     /tmp/ccZubRnv.s:103    .text:000000000000006c _Z6removeP10MemoryDescS0_
     /tmp/ccZubRnv.s:106    .text:000000000000006c .L0 
     /tmp/ccZubRnv.s:108    .text:000000000000006c .L0 
     /tmp/ccZubRnv.s:109    .text:0000000000000070 .L0 
     /tmp/ccZubRnv.s:111    .text:0000000000000074 .L0 
     /tmp/ccZubRnv.s:113    .text:0000000000000078 .L0 
     /tmp/ccZubRnv.s:115    .text:0000000000000078 .L0 
     /tmp/ccZubRnv.s:117    .text:000000000000007c .L0 
     /tmp/ccZubRnv.s:119    .text:0000000000000080 .L0 
     /tmp/ccZubRnv.s:121    .text:0000000000000084 .L0 
     /tmp/ccZubRnv.s:125    .text:0000000000000088 .L0 
     /tmp/ccZubRnv.s:126    .text:0000000000000088 .L0 
GAS LISTING /tmp/ccZubRnv.s 			page 10


     /tmp/ccZubRnv.s:131    .text:0000000000000094 .L0 
     /tmp/ccZubRnv.s:133    .text:0000000000000098 .L0 
     /tmp/ccZubRnv.s:134    .text:0000000000000098 .L0 
     /tmp/ccZubRnv.s:136    .text:000000000000009c .L0 
     /tmp/ccZubRnv.s:138    .text:00000000000000a0 .L0 
     /tmp/ccZubRnv.s:139    .text:00000000000000a0 .L0 
     /tmp/ccZubRnv.s:143    .text:00000000000000a4 .L0 
     /tmp/ccZubRnv.s:144    .text:00000000000000a4 .L0 
     /tmp/ccZubRnv.s:145    .text:00000000000000a8 .L0 
     /tmp/ccZubRnv.s:146    .text:00000000000000a8 .L0 
     /tmp/ccZubRnv.s:147    .text:00000000000000a8 .L0 
     /tmp/ccZubRnv.s:149    .text:00000000000000ac .L0 
     /tmp/ccZubRnv.s:153    .text:00000000000000b0 .L0 
     /tmp/ccZubRnv.s:155    .text:00000000000000b0 .L0 
     /tmp/ccZubRnv.s:156    .text:00000000000000b0 .L0 
     /tmp/ccZubRnv.s:159    .text:00000000000000b4 .L0 
     /tmp/ccZubRnv.s:160    .text:00000000000000b4 .L0 
     /tmp/ccZubRnv.s:162    .text:00000000000000b8 .L0 
     /tmp/ccZubRnv.s:163    .text:00000000000000b8 .L0 
     /tmp/ccZubRnv.s:166    .text:00000000000000bc .L0 
     /tmp/ccZubRnv.s:169    .text:00000000000000c4 .L0 
     /tmp/ccZubRnv.s:175    .text:00000000000000c4 _Z7connectP10MemoryDescS0_
     /tmp/ccZubRnv.s:178    .text:00000000000000c4 .L0 
     /tmp/ccZubRnv.s:180    .text:00000000000000c4 .L0 
     /tmp/ccZubRnv.s:181    .text:00000000000000c8 .L0 
     /tmp/ccZubRnv.s:183    .text:00000000000000cc .L0 
     /tmp/ccZubRnv.s:185    .text:00000000000000d0 .L0 
     /tmp/ccZubRnv.s:187    .text:00000000000000d0 .L0 
     /tmp/ccZubRnv.s:189    .text:00000000000000d4 .L0 
     /tmp/ccZubRnv.s:191    .text:00000000000000d8 .L0 
     /tmp/ccZubRnv.s:193    .text:00000000000000dc .L0 
     /tmp/ccZubRnv.s:197    .text:00000000000000e0 .L0 
     /tmp/ccZubRnv.s:198    .text:00000000000000e0 .L0 
     /tmp/ccZubRnv.s:203    .text:00000000000000ec .L0 
     /tmp/ccZubRnv.s:208    .text:00000000000000f4 .L0 
     /tmp/ccZubRnv.s:209    .text:00000000000000f4 .L0 
     /tmp/ccZubRnv.s:211    .text:00000000000000f8 .L0 
     /tmp/ccZubRnv.s:213    .text:00000000000000fc .L0 
     /tmp/ccZubRnv.s:215    .text:0000000000000100 .L0 
     /tmp/ccZubRnv.s:218    .text:0000000000000108 .L0 
     /tmp/ccZubRnv.s:220    .text:000000000000010c .L0 
     /tmp/ccZubRnv.s:221    .text:000000000000010c .L0 
     /tmp/ccZubRnv.s:223    .text:0000000000000110 .L0 
     /tmp/ccZubRnv.s:225    .text:0000000000000114 .L0 
     /tmp/ccZubRnv.s:227    .text:0000000000000118 .L0 
     /tmp/ccZubRnv.s:229    .text:000000000000011c .L0 
     /tmp/ccZubRnv.s:230    .text:000000000000011c .L0 
     /tmp/ccZubRnv.s:232    .text:0000000000000120 .L0 
     /tmp/ccZubRnv.s:234    .text:0000000000000124 .L0 
     /tmp/ccZubRnv.s:235    .text:0000000000000124 .L0 
     /tmp/ccZubRnv.s:239    .text:0000000000000128 .L0 
     /tmp/ccZubRnv.s:240    .text:0000000000000128 .L0 
     /tmp/ccZubRnv.s:242    .text:000000000000012c .L0 
     /tmp/ccZubRnv.s:244    .text:0000000000000130 .L0 
     /tmp/ccZubRnv.s:246    .text:0000000000000134 .L0 
     /tmp/ccZubRnv.s:248    .text:0000000000000138 .L0 
     /tmp/ccZubRnv.s:249    .text:0000000000000138 .L0 
GAS LISTING /tmp/ccZubRnv.s 			page 11


     /tmp/ccZubRnv.s:251    .text:000000000000013c .L0 
     /tmp/ccZubRnv.s:253    .text:0000000000000140 .L0 
     /tmp/ccZubRnv.s:257    .text:0000000000000144 .L0 
     /tmp/ccZubRnv.s:258    .text:0000000000000144 .L0 
     /tmp/ccZubRnv.s:263    .text:0000000000000150 .L0 
     /tmp/ccZubRnv.s:264    .text:0000000000000150 .L0 
     /tmp/ccZubRnv.s:266    .text:0000000000000154 .L0 
     /tmp/ccZubRnv.s:269    .text:000000000000015c .L0 
     /tmp/ccZubRnv.s:274    .text:0000000000000164 .L0 
     /tmp/ccZubRnv.s:278    .text:0000000000000168 .L0 
     /tmp/ccZubRnv.s:279    .text:000000000000016c .L0 
     /tmp/ccZubRnv.s:280    .text:000000000000016c .L0 
     /tmp/ccZubRnv.s:282    .text:0000000000000170 .L0 
     /tmp/ccZubRnv.s:284    .text:0000000000000174 .L0 
     /tmp/ccZubRnv.s:290    .text:0000000000000174 .L0 
     /tmp/ccZubRnv.s:92     .text:0000000000000064 .L6
     /tmp/ccZubRnv.s:49     .text:0000000000000038 .L9
     /tmp/ccZubRnv.s:60     .text:0000000000000044 .L10
     /tmp/ccZubRnv.s:80     .text:0000000000000058 .L5
     /tmp/ccZubRnv.s:29     .text:000000000000001c .L4
     /tmp/ccZubRnv.s:70     .text:000000000000004c .L1
     /tmp/ccZubRnv.s:142    .text:00000000000000a4 .L12
     /tmp/ccZubRnv.s:164    .text:00000000000000bc .L14
     /tmp/ccZubRnv.s:152    .text:00000000000000b0 .L17
     /tmp/ccZubRnv.s:122    .text:0000000000000088 .L13
     /tmp/ccZubRnv.s:276    .text:0000000000000168 .L19
     /tmp/ccZubRnv.s:272    .text:0000000000000164 .L25
     /tmp/ccZubRnv.s:206    .text:00000000000000f4 .L28
     /tmp/ccZubRnv.s:255    .text:0000000000000144 .L23
     /tmp/ccZubRnv.s:194    .text:00000000000000e0 .L20
     /tmp/ccZubRnv.s:237    .text:0000000000000128 .L29
     /tmp/ccZubRnv.s:558    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccZubRnv.s:1035   .debug_str:000000000000017e .LASF25
     /tmp/ccZubRnv.s:1025   .debug_str:0000000000000119 .LASF26
     /tmp/ccZubRnv.s:1013   .debug_str:00000000000000ac .LASF27
     /tmp/ccZubRnv.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccZubRnv.s:287    .text:0000000000000174 .Letext0
     /tmp/ccZubRnv.s:987    .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccZubRnv.s:989    .debug_str:0000000000000000 .LASF0
     /tmp/ccZubRnv.s:1033   .debug_str:000000000000016b .LASF1
     /tmp/ccZubRnv.s:1017   .debug_str:00000000000000e7 .LASF2
     /tmp/ccZubRnv.s:1007   .debug_str:0000000000000070 .LASF4
     /tmp/ccZubRnv.s:1003   .debug_str:000000000000004b .LASF3
     /tmp/ccZubRnv.s:995    .debug_str:000000000000002a .LASF5
     /tmp/ccZubRnv.s:1005   .debug_str:000000000000005d .LASF6
     /tmp/ccZubRnv.s:1031   .debug_str:0000000000000158 .LASF7
     /tmp/ccZubRnv.s:1043   .debug_str:0000000000000270 .LASF8
     /tmp/ccZubRnv.s:991    .debug_str:000000000000000d .LASF9
     /tmp/ccZubRnv.s:993    .debug_str:000000000000001b .LASF10
     /tmp/ccZubRnv.s:1037   .debug_str:0000000000000242 .LASF11
     /tmp/ccZubRnv.s:997    .debug_str:0000000000000031 .LASF12
     /tmp/ccZubRnv.s:1047   .debug_str:000000000000028b .LASF13
     /tmp/ccZubRnv.s:1015   .debug_str:00000000000000db .LASF14
     /tmp/ccZubRnv.s:1027   .debug_str:000000000000012c .LASF15
     /tmp/ccZubRnv.s:1021   .debug_str:00000000000000fc .LASF16
     /tmp/ccZubRnv.s:1045   .debug_str:0000000000000280 .LASF28
     /tmp/ccZubRnv.s:1039   .debug_str:0000000000000251 .LASF17
GAS LISTING /tmp/ccZubRnv.s 			page 12


     /tmp/ccZubRnv.s:1051   .debug_str:00000000000002a3 .LASF18
     /tmp/ccZubRnv.s:1029   .debug_str:0000000000000142 .LASF29
     /tmp/ccZubRnv.s:1049   .debug_str:000000000000029b .LASF21
     /tmp/ccZubRnv.s:1009   .debug_str:0000000000000077 .LASF23
     /tmp/ccZubRnv.s:176    .text:00000000000000c4 .LFB5
     /tmp/ccZubRnv.s:285    .text:0000000000000174 .LFE5
     /tmp/ccZubRnv.s:999    .debug_str:0000000000000041 .LASF19
     /tmp/ccZubRnv.s:863    .debug_loc:0000000000000000 .LLST4
     /tmp/ccZubRnv.s:1001   .debug_str:0000000000000046 .LASF20
     /tmp/ccZubRnv.s:877    .debug_loc:0000000000000039 .LLST5
     /tmp/ccZubRnv.s:1019   .debug_str:00000000000000f5 .LASF22
     /tmp/ccZubRnv.s:1011   .debug_str:0000000000000092 .LASF24
     /tmp/ccZubRnv.s:104    .text:000000000000006c .LFB4
     /tmp/ccZubRnv.s:170    .text:00000000000000c4 .LFE4
     /tmp/ccZubRnv.s:900    .debug_loc:00000000000000a8 .LLST2
     /tmp/ccZubRnv.s:918    .debug_loc:00000000000000f4 .LLST3
     /tmp/ccZubRnv.s:1023   .debug_str:0000000000000112 .LASF30
     /tmp/ccZubRnv.s:1041   .debug_str:0000000000000256 .LASF31
     /tmp/ccZubRnv.s:10     .text:0000000000000000 .LFB3
     /tmp/ccZubRnv.s:98     .text:000000000000006c .LFE3
     /tmp/ccZubRnv.s:929    .debug_loc:000000000000012a .LLST0
     /tmp/ccZubRnv.s:959    .debug_loc:00000000000001af .LLST1
     /tmp/ccZubRnv.s:179    .text:00000000000000c4 .LVL18
     /tmp/ccZubRnv.s:275    .text:0000000000000168 .LVL26
     /tmp/ccZubRnv.s:195    .text:00000000000000e0 .LVL19
     /tmp/ccZubRnv.s:200    .text:00000000000000e8 .LVL20
     /tmp/ccZubRnv.s:205    .text:00000000000000f4 .LVL21
     /tmp/ccZubRnv.s:236    .text:0000000000000128 .LVL22
     /tmp/ccZubRnv.s:254    .text:0000000000000144 .LVL23
     /tmp/ccZubRnv.s:260    .text:000000000000014c .LVL24
     /tmp/ccZubRnv.s:271    .text:0000000000000164 .LVL25
     /tmp/ccZubRnv.s:107    .text:000000000000006c .LVL11
     /tmp/ccZubRnv.s:141    .text:00000000000000a4 .LVL14
     /tmp/ccZubRnv.s:151    .text:00000000000000b0 .LVL15
     /tmp/ccZubRnv.s:167    .text:00000000000000c0 .LVL17
     /tmp/ccZubRnv.s:123    .text:0000000000000088 .LVL12
     /tmp/ccZubRnv.s:128    .text:0000000000000090 .LVL13
     /tmp/ccZubRnv.s:14     .text:0000000000000000 .LVL0
     /tmp/ccZubRnv.s:54     .text:000000000000003c .LVL4
     /tmp/ccZubRnv.s:59     .text:0000000000000044 .LVL5
     /tmp/ccZubRnv.s:65     .text:0000000000000048 .LVL6
     /tmp/ccZubRnv.s:69     .text:000000000000004c .LVL7
     /tmp/ccZubRnv.s:79     .text:0000000000000058 .LVL8
     /tmp/ccZubRnv.s:95     .text:0000000000000068 .LVL10
     /tmp/ccZubRnv.s:30     .text:000000000000001c .LVL1
     /tmp/ccZubRnv.s:35     .text:0000000000000024 .LVL2
     /tmp/ccZubRnv.s:48     .text:0000000000000038 .LVL3
     /tmp/ccZubRnv.s:91     .text:0000000000000064 .LVL9
     /tmp/ccZubRnv.s:291    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
